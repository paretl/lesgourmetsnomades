version: '3.7'

services:
  nginx-proxy:
    image: jwilder/nginx-proxy:1.0.4-alpine
    restart: always
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-certs:/etc/nginx/certs
      - ./nginx-vhost:/etc/nginx/vhost.d
      - ./nginx-html:/usr/share/nginx/html
      - ./nginx:/etc/nginx/conf.d
      - /var/run/docker.sock:/tmp/docker.sock:ro

  letsencrypt-nginx-proxy-companion:
    image: nginxproxy/acme-companion:2.2.3
    restart: always
    container_name: nginx-proxy-acme
    volumes:
      - ./nginx-certs:/etc/nginx/certs
      - ./nginx-vhost:/etc/nginx/vhost.d
      - ./nginx-html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy
      DEFAULT_EMAIL: louis.paret@gmail.com

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?Variable MYSQL_ROOT_PASSWORD is not present}
      MYSQL_DATABASE: ${MYSQL_DATABASE:?Variable MYSQL_DATABASE is not present}
      MYSQL_USER: ${MYSQL_USER:?Variable MYSQL_USER is not present}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:?Variable MYSQL_PASSWORD is not present}
    volumes:
      - db_data:/var/lib/mysql

volumes:
  db_data: {}

networks:
  default:
    name: web

  # phpmyadmin:
  #   image: phpmyadmin/phpmyadmin:5.2.1
  #   restart: always
  #   environment:
  #     MEMORY_LIMIT: 128M
  #     HIDE_PHP_VERSION: true
  #     UPLOAD_LIMIT: 100M
  #     MYSQL_USERNAME: ${MYSQL_USER:?Variable MYSQL_USER is not present}
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?Variable MYSQL_ROOT_PASSWORD is not present}
  #     VIRTUAL_HOST: phpmyadmin.louisparet.ovh
  #     LETSENCRYPT_HOST: phpmyadmin.louisparet.ovh
  
  # worker:
  #   image: myoung34/github-runner:2.300.2-ubuntu-jammy
  #   restart: always
  #   environment:
  #     REPO_URL: https://github.com/paretl/lesgourmetsnomades
  #     RUNNER_NAME: primary-runner
  #     RUNNER_TOKEN: ${GITHUB_RUNNER_TOKEN:?Variable GITHUB_RUNNER_TOKEN is not present}
  #     CONFIGURED_ACTIONS_RUNNER_FILES_DIR: /tmp
  #   security_opt:
  #     # needed on SELinux systems to allow docker container to manage other docker containers
  #     - label:disable
  #   volumes:
  #     - '/var/run/docker.sock:/var/run/docker.sock'
  #     - '/home/lparet/.ssh/id_rsa:/root/.ssh/id_rsa'
  #     - '/_work:/_work'


